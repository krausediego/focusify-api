// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priorities {
  HIGH
  MEDIUM
  LOW
  NOPRIORITY
}

model Profile {
  id          String    @id @default(uuid())
  userId      String    @unique @map("user_id")
  email       String    @unique
  fullName    String?   @map("full_name")
  username    String?   @unique
  phoneNumber String?   @unique @map("phone_number")
  gender      String?
  birthDate   DateTime? @map("birth_date")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Project     Project[]
  Tag         Tag[]
  Task        Task[]
  TaskProject ProjectTask[]
  TagTask     TagTask[]

  @@map("profiles")
}

model Project {
  id     String  @id @default(uuid())
  name   String
  color  String
  status Boolean @default(true)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   Profile @relation(fields: [userId], references: [userId])
  userId String  @map("user_id")

  TaskProject ProjectTask[]

  @@map("projects")
}

model Tag {
  id     String  @id @default(uuid())
  name   String
  color  String
  status Boolean @default(true)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   Profile @relation(fields: [userId], references: [userId])
  userId String  @map("user_id")

  TagTask TagTask[]

  @@map("tags")
}

model Task {
  id                 String     @id @default(uuid())
  name               String
  estimatedPomodoros Int        @map("estimated_pomodoros")
  date               DateTime
  priority           Priorities
  status             Boolean    @default(true)
  active             Boolean    @default(false)

  user   Profile @relation(fields: [userId], references: [userId])
  userId String  @map("user_id")

  ProjectTask ProjectTask?
  TagTask     TagTask[]

  @@map("tasks")
}

model ProjectTask {
  id String @id @default(uuid())

  user   Profile @relation(fields: [userId], references: [userId])
  userId String  @map("user_id")

  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @map("project_id")

  task   Task   @relation(fields: [taskId], references: [id])
  taskId String @unique @map("task_id")

  @@map("projects_tasks")
}

model TagTask {
  id String @id @default(uuid())

  user   Profile @relation(fields: [userId], references: [userId])
  userId String  @map("user_id")

  tag   Tag    @relation(fields: [tagId], references: [id])
  tagId String @map("tag_id")

  task   Task   @relation(fields: [taskId], references: [id])
  taskId String @map("task_id")

  @@map("tags_tasks")
}
